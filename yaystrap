#!/bin/sh
#
# Run this locally via git clone after you've bootstrapped.
# Yay is best ran interactively. The goal of this script
# is less hands-off automation and more about consistency.

USER=$(id -un)
MANIFESTS=$@

if [ "${USER}" == root ]; then
  echo "!! Don't run as root"
  exit 1
fi

if [ ! -d /opt/yay-git ]; then
  echo ":: Installing yay"
  cd /opt
  sudo git clone https://aur.archlinux.org/yay-git.git
  sudo chown -R "${USER}:${USER}" yay-git
  cd yay-git
  makepkg -si
fi

# pulling in spotifyd... edit your password later.
mkdir -p "${HOME}/.config/spotifyd"
chmod 700 "${HOME}/.config/spotifyd"
cat > "${HOME}/.config/spotifyd" <<EOF
[global]
username = <unquoted_username_here>
password = <unquoted_password_here>
backend = pulseaudio
device_name = <unquoted_short_hostname_here>
device_type = computer
bitrate = 320
EOF
mkdir -p "${HOME}/.config/systemd/user"
cat > "${HOME}/.config/systemd/user/spotifyd.service" <<EOF
[Unit]
Description=A spotify playing daemon
Documentation=https://github.com/Spotifyd/spotifyd
Wants=sound.target
After=sound.target
Wants=network-online.target
After=network-online.target

[Service]
ExecStart=/usr/bin/spotifyd --no-daemon
Restart=always
RestartSec=12

[Install]
WantedBy=default.target
EOF
systemctl --user enable spotifyd

# Populate for future use...
mkdir -p "${HOME}/.gnupg"
chmod 700 "${HOME}/.gnupg"
cat > "${HOME}/.gnupg/gpg.conf" <<EOF
no-greeting
no-permission-warning
lock-never
keyserver-options timeout=10
keyserver-options import-clean
keyserver-options no-self-sigs-only
keyserver hkp://ipv4.pool.sks-keyservers.net:11371
EOF

for m in $MANIFESTS; do
  echo ":: Processing manifest ${m}"
  for p in $(cat "${m}" 2>/dev/null); do
    if ! yay -Qq "${p}" >/dev/null 2>&1; then
      echo ":: Installing ${p}"
      yay -S "${p}"
    fi
  done
done

